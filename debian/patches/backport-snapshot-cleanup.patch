Description: Enforce snapshot cleanup.
Author: David Subiros<david.perez5@hp.com>
Status: https://review.openstack.org/#change,726
diff -Naurp nova-2011.3.orig//Authors nova-2011.3//Authors
--- nova-2011.3.orig//Authors	2011-09-22 08:02:23.000000000 -0400
+++ nova-2011.3//Authors	2011-09-29 14:30:16.292509687 -0400
@@ -27,6 +27,7 @@ Dan Prince <dan.prince@rackspace.com>
 Dan Wendlandt <dan@nicira.com>
 Dave Walker <DaveWalker@ubuntu.com>
 David Pravec <David.Pravec@danix.org>
+David Subiros <david.perez5@hp.com>
 Dean Troyer <dtroyer@gmail.com>
 Devendra Modium <dmodium@isi.edu>
 Devin Carlen <devin.carlen@gmail.com>
diff -Naurp nova-2011.3.orig//nova/virt/libvirt/connection.py nova-2011.3//nova/virt/libvirt/connection.py
--- nova-2011.3.orig//nova/virt/libvirt/connection.py	2011-09-22 08:02:23.000000000 -0400
+++ nova-2011.3//nova/virt/libvirt/connection.py	2011-09-29 14:30:16.292509687 -0400
@@ -445,29 +445,31 @@ class LibvirtConnection(driver.ComputeDr
 
         # Export the snapshot to a raw image
         temp_dir = tempfile.mkdtemp()
-        out_path = os.path.join(temp_dir, snapshot_name)
-        qemu_img_cmd = ('qemu-img',
-                        'convert',
-                        '-f',
-                        source_format,
-                        '-O',
-                        image_format,
-                        '-s',
-                        snapshot_name,
-                        disk_path,
-                        out_path)
-        utils.execute(*qemu_img_cmd)
+        try:
+            out_path = os.path.join(temp_dir, snapshot_name)
+            qemu_img_cmd = ('qemu-img',
+                            'convert',
+                            '-f',
+                            source_format,
+                            '-O',
+                            image_format,
+                            '-s',
+                            snapshot_name,
+                            disk_path,
+                            out_path)
+            utils.execute(*qemu_img_cmd)
 
-        # Upload that image to the image service
-        with open(out_path) as image_file:
-            image_service.update(context,
-                                 image_href,
-                                 metadata,
-                                 image_file)
+            # Upload that image to the image service
+            with open(out_path) as image_file:
+                image_service.update(context,
+                                     image_href,
+                                     metadata,
+                                     image_file)
 
-        # Clean up
-        shutil.rmtree(temp_dir)
-        snapshot_ptr.delete(0)
+        finally:
+            # Clean up
+            shutil.rmtree(temp_dir)
+            snapshot_ptr.delete(0)
 
     @exception.wrap_exception()
     def reboot(self, instance, network_info, xml=None):
