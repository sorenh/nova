#! /bin/sh
### BEGIN INIT INFO
# Provides:          nova-instancemonitor
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: nova-instancemonitor
# Description:       Monitor your virtual machine resource usages
### END INIT INFO

set -e

DAEMON=/usr/bin/nova-instancemonitor
DAEMON_ARGS="--flagfile=/etc/nova/nova.conf"
PIDFILE=/var/run/nova/nova-instancemonitor.pid

ENABLED=true

if test -f /etc/default/nova-instancemonitor; then
  . /etc/default/nova-instancemonitor
fi

mkdir -p /var/run/nova
chown nova:root /var/run/nova

uid="$(getent passwd nova | cut -f3 -d:)"
gid="$(getent passwd nova | cut -f4 -d:)"
DAEMON_ARGS="${DAEMON_ARGS} --uid $uid --gid $gid --pidfile $PIDFILE"

. /lib/lsb/init-functions

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

if ! [ -x ${DAEMON} ] ; then
	exit 0
fi

case "$1" in
start)
	test "$ENABLED" = "true" || exit 0
	log_daemon_msg "Starting nova compute" "nova-instancemonitor"
	start-stop-daemon --start --chdir /var/run --exec ${DAEMON} -- ${DAEMON_ARGS}
	log_end_msg $?
;;
stop)
	test "$ENABLED" = "true" || exit 0
	log_daemon_msg "Stopping nova compute" "nova-instancemonitor"
	start-stop-daemon --stop --oknodo --pidfile ${PIDFILE}
	log_end_msg $?
;;
restart|force-reload)
	test "$ENABLED" = "true" || exit 1
	$0 stop
	sleep 1
	$0 start
;;
status)
	test "$ENABLED" = "true" || exit 0
	status_of_proc -p $PIDFILE $DAEMON nova-instancemonitor && exit 0 || exit $?
;;
*)
	log_action_msg "Usage: $0 {start|stop|restart|force-reload|status}"
	exit 1
;;
esac

exit 0
